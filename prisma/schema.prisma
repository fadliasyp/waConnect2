// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Message {
  id          String   @id @default(uuid())
  sender      String   
  content     String?  @db.Text  
  reply       String?  @db.Text
  mediaUrl    String? 
  type        String  
  timestamp   String 
  sessionId   String   // FK ke session
  session     Session  @relation(fields: [sessionId], references: [id])
}

model Session {
  id          String   @id @default(uuid())
  sessionName String   @unique
  status      String   // INITIALIZING, QR_CODE_GENERATED, AUTHENTICATED
  qrPath      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String   
  user        User     @relation(fields: [userId], references: [id])
  message     Message[]
}

model ApiKey {
  id        String   @id @default(uuid())
  name      String
  key       String   @unique
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime
  isActive  Boolean  @default(true)
   user      User    @relation(fields: [userId], references: [id])

  @@index([userId])
}

model User {
  id       String    @id @default(uuid())
  sender String
  username String?    @unique
  email    String?  @unique

  session Session[]
  apiKeys  ApiKey[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}